<!doctype html>
<html lang="es">

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1, viewport-fit=cover" />
  <meta http-equiv="X-UA-Compatible" content="ie=edge" />
  <title> <%- GetInfo.title %> | <%- GetInfo.slogan %> </title>
  <link href="/dist/css/tabler.min.css?1684106062" rel="stylesheet" />
  <link rel="stylesheet" href="/styles?v=<%-v%>" />
  <link rel="stylesheet" as="style" href="https://cdnjs.cloudflare.com/ajax/libs/Swiper/4.0.7/css/swiper.min.css">
  <link rel="stylesheet" as="style" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.11.2/css/all.min.css">
  <meta name="description" content="<%- GetInfo.meta_description %>">
  <meta name="keywords" content="<%- GetInfo.meta_keyword %>">
  <meta name="author" content="<%- GetInfo.title %>">
  <meta name="robots" content="index, follow">
  <meta name="referrer" content="no-referrer-when-downgrade">
  <meta name="theme" content="theme-002">
  <!-- Google tag (gtag.js) -->
  <script async src="https://www.googletagmanager.com/gtag/js?id=G-3S40H8Q0BG"></script>
  <script>
    window.dataLayer = window.dataLayer || [];
    function gtag() { dataLayer.push(arguments); }
    gtag('js', new Date());

    gtag('config', 'G-3S40H8Q0BG');
  </script>
  <script src="https://cdn.tailwindcss.com"></script>
  <style>
    :root {
      --primary-color: <%- GetInfo.colors[0] %>;
      --secondary-color: <%- GetInfo.colors[1] %>;
      --accent-color: <%- GetInfo.colors[2] %>;
    }

    .social-links svg {
      width: 25px;
    }
  </style>
</head>

<body>
  <div class="modal modal-blur fade" id="modal-large" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Detalle de producto</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <div class="row">
            <div class="col-lg-7">
              <div id="carousel-indicators-thumb" class="carousel slide carousel-fade" data-bs-ride="carousel">
                <div class="carousel-indicators carousel-indicators-thumb" id="carouselIndicators">
                </div>
                <div class="carousel-inner" id="carouselInner"> </div>
              </div>
            </div>
            <div class="col-lg-5">
              <h3 class="title mt-4"></h3>
              <p class="detail-product"></p>
              <div class="d-grid gap-2">

                <button type="button" class="btn btn-primary btn-actions-catalog" data-title="" data-price=""
                  data-action="" data-bs-dismiss="modal">Cotizar producto</button>
              </div>
            </div>
          </div>

        </div>

      </div>
    </div>
  </div>
  <div class="page">
    <div class="page-wrapper">
      <div class="page-body mb-0">
        <%- include('header') %>
          <section class="container-fluid  d-flex flex-column justify-content-center">
            <%- include('parts/' + contentTemplate) %>
          </section>

          <%- include('footer') %>
      </div>
    </div>

 
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script src="/dist/js/tabler.min.js?1684106062" defer></script>
    <script src="/dist/js/swiper.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/animejs/3.2.0/anime.min.js"></script>
    <script>
      var menu = [];
      jQuery('.swiper-slide').each(function (index) {
        menu.push(jQuery(this).find('.slide-inner').attr("data-text"));
      });
      var interleaveOffset = 0.5;
      var swiperOptions = {
        loop: true,
        speed: 1000,
        parallax: true,
        autoplay: {
          delay: 6500,
          disableOnInteraction: false,
        },
        watchSlidesProgress: true,
        pagination: {
          el: '.swiper-pagination',
          clickable: true,
        },

        navigation: {
          nextEl: '.swiper-button-next',
          prevEl: '.swiper-button-prev',
        },

        on: {
          progress: function () {
            var swiper = this;
            for (var i = 0; i < swiper.slides.length; i++) {
              var slideProgress = swiper.slides[i].progress;
              var innerOffset = swiper.width * interleaveOffset;
              var innerTranslate = slideProgress * innerOffset;
              swiper.slides[i].querySelector(".slide-inner").style.transform =
                "translate3d(" + innerTranslate + "px, 0, 0)";
            }
          },

          touchStart: function () {
            var swiper = this;
            for (var i = 0; i < swiper.slides.length; i++) {
              swiper.slides[i].style.transition = "";
            }
          },

          setTransition: function (speed) {
            var swiper = this;
            for (var i = 0; i < swiper.slides.length; i++) {
              swiper.slides[i].style.transition = speed + "ms";
              swiper.slides[i].querySelector(".slide-inner").style.transition =
                speed + "ms";
            }
          }
        }
      };

      var swiper = new Swiper(".swiper-container", swiperOptions);

      var sliderBgSetting = $(".slide-bg-image");
      sliderBgSetting.each(function (indx) {
        if ($(this).attr("data-background")) {
          $(this).css("background-image", "url(" + $(this).data("background") + ")");
        }
      });

      const swiperMultipleSlides = document.querySelector('#swiper-multiple-slides');
      const SliderCategorias = document.querySelector('#categories-multiple-slides');

      if (swiperMultipleSlides) {
        new Swiper(swiperMultipleSlides, {
          slidesPerView: 5,
          spaceBetween: 30,
          loop: false,
          autoplay: false,
          pagination: {
            clickable: true,
            el: '.swiper-pagination-products'
          },
          breakpoints: {

            768: {
              slidesPerView: 1,
              stage: 2,

            }
          }
        });
      }

      if (SliderCategorias) {
        new Swiper(SliderCategorias, {
          slidesPerView: 5,
          spaceBetween: 30,
          loop: false,
          autoplay: false,
          pagination: {
            clickable: true,
            el: '.swiper-pagination-products'
          },
          breakpoints: {
            768: {
              slidesPerView: 2,
              stage: 2,

            }
          }
        });
      }
      document.getElementById('shareBtn').addEventListener('click', async () => {
        try {
          await navigator.share({
            title: 'Título del contenido compartido',
            text: 'Descripción o texto del contenido compartido',
            url: 'URL del contenido a compartir',
          });
          console.log('Contenido compartido exitosamente');
        } catch (error) {
          console.error('Error al compartir:', error.message);
        }
      });

      const button_whatsapp = document.querySelectorAll('.btn-actions-catalog');

      button_whatsapp.forEach(button => {
        button.addEventListener('click', () => {
          const phone = "<%- GetInfo.catalogo.whatsapp['number'] %>";
          const title = button.getAttribute('data-title');
          const price = button.getAttribute('data-price');

          if (phone && title && price) {
            const message = `Hola, estoy interesado en comprar *${title}* al precio de S/ ${price}. ¿Podría proporcionar más detalles?`;
            const whatsappLink = `https://wa.me/${phone}?text=${encodeURIComponent(message)}`;
            window.open(whatsappLink, '_blank');
          } else {
            console.error('Required data attributes not found');
          }
        });
      });

      function getQueryParam(param) {
        const urlParams = new URLSearchParams(window.location.search);
        return urlParams.get(param);
      }

      function updateURL(param, value) {
        const url = new URL(window.location);
        url.searchParams.set(param, value);
        window.history.pushState({}, '', url);
      }

      const carouselIndicators = document.getElementById('carouselIndicators');
      const carouselInner = document.getElementById('carouselInner');

      function generateCarousel(images) {
        let indicatorsHTML = '';
        let innerHTML = '';

        images.forEach((imageUrl, index) => {

          indicatorsHTML += `<button type="button" data-bs-target="#carousel-indicators-thumb" data-bs-slide-to="${index}" class="ratio ratio-4x3 ${index === 0 ? 'active' : ''}" style="background-image: url(${imageUrl})"></button>`;

          innerHTML += `
                  <div class="carousel-item ${index === 0 ? 'active' : ''}">
                    <img class="d-block w-100 image-product object-fit-cover border rounded" alt="Imagen ${index + 1}" src="${imageUrl}">
                  </div>
                `;
        });

        carouselIndicators.innerHTML = indicatorsHTML;
        carouselInner.innerHTML = innerHTML;
      }


      async function fetchProduct(product) {
   
        const fullHostname = window.location.hostname;

        const subdomain = fullHostname; 

        const apiUrl = `<%- api_product %>/api/client/products/${product}`;

        try {
          const response = await fetch(apiUrl, {
            method: 'GET',
            headers: {
              'domain': subdomain
            }
          });

          if (!response.ok) {
            throw new Error('Producto no encontrado');
          }

          const productData = await response.json();
          return productData;
        } catch (error) {
          console.error(error);
          return null;
        }
      }

      async function openModalIfProductExists(product) {
        const productData = await fetchProduct(product);
        if (productData) {

          const modalElement = document.getElementById('modal-large');
          const modal = new bootstrap.Modal(modalElement);
          generateCarousel(productData.image_default);
          document.querySelector('.btn-actions-catalog').setAttribute('data-title', productData.title);
          document.querySelector('.btn-actions-catalog').setAttribute('data-price', productData.price['regular']);
          $('.detail-product').html(productData.description_short)
          $('.title').text(productData.title)
          modal.show();

          updateURL('product', product);
        } else {
          alert('Producto no encontrado');
        }
      }

      document.addEventListener('DOMContentLoaded', () => {
        const buttons = document.querySelectorAll('.get_detail_product');
        buttons.forEach(button => {
          button.addEventListener('click', () => {
            const slug = button.getAttribute('data-slug');
            openModalIfProductExists(slug);
          });
        });
      });

      const product = getQueryParam('product');
      if (product) {
        openModalIfProductExists(product);
      }


    </script>
</body>


</html>